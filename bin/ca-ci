#!/usr/bin/env ruby
#
# Covid-19 class interval helper
#

require 'yaml'

r_est_red = []
r_est_grn = []

r_est_red_none = [1.0,1.5,2.0]
r_est_grn_none = [0.0,0.5,0.9]

out_dir = nil

# Start with <county>_R.yml
ARGV.each do |yfile|
  next if yfile =~ /unassigned/
  if out_dir.nil?
    out_dir=File.dirname(yfile)
  end
  File.open(yfile) do |yf|
    begin
      y = YAML::load(yf)
      if y.is_a? Hash
        estimate_R_mean = y['R']['Mean(R)'][-1]
        if estimate_R_mean < 1.0
          r_est_grn << estimate_R_mean
        else
          r_est_red << estimate_R_mean
        end
      end
    rescue
      raise "#{yfile} #{$!}"
    end
  end
end

def ci_color_a(a,a_none)
  col_a = a.sort.uniq
  if col_a.length == 0
    # if the length is zero, use a dummy range
    col_a = a_none
  elsif col_a.length == 1
    # if the length is one, create a minimal color interval range
    col_a << col_a[0] * 1.001
    col_a << col_a[1] * 1.001
  elsif col_a.length == 2
    # if the length is two, add one more interval to keep R happy
    col_a << col_a[1] * 1.001
  end
  col_a
end

red_a = ci_color_a(r_est_red,r_est_red_none)
grn_a = ci_color_a(r_est_grn,r_est_grn_none)

red_n = [red_a.length-1, 5].min
grn_n = [grn_a.length-1, 5].min

File.open("#{out_dir}/ci.R","w") do |f|
  f.puts <<"EOF"
library(yaml)
library(classInt)
ci_red <- classIntervals(c(#{red_a.join(',')}),n=#{red_n}, style=\"fisher\")
ci_grn <- classIntervals(c(#{grn_a.join(',')}),n=#{grn_n}, style=\"fisher\")
write_yaml(ci_red, "#{out_dir}/ci_red.yml")
write_yaml(ci_grn, "#{out_dir}/ci_grn.yml")
EOF

end
